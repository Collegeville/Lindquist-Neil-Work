byte loading operations
	4x load pointer
	1x load local_int_t
	1x call ComputeSPMV_ref<float>
	1x call ComputeWAXPBY_ref<float, float, double>
	1x call ComputeDotProduct_ref<double, double>(x dot x)
	1x call ComputeDotProduct_ref<double, float>(!x dot x)
	1x call CopyVector<float>

	loop iter-1 times
		1x call ComputeDotProduct_ref<double, float>(!x dot x)
		1x call ComputeWAXPBY_ref<float, float, float>

	loop iter times
		#if preconditioning
			1x call ComputeMG_ref<double>
		#else
			1x call ComputeWAXPBY_ref<double, double, float>
		#endif
	
		1x call ComputeWAXPBY_ref<float, float, float>
		1x call ComputeWAXPBY_ref<double, float, double>
		1x call ComputeSPMV_ref<float>
		1x call ComputeDotProduct_ref<float, float>(!x dot x)
		1x call ComputeDotProduct_ref<double, double)(x dot x)
	
	
bytes loaded (excluding counters and accumulators, assuming all pointers are the same size)
	4*sizeof(void*) + sizeof(local_int_t)
	+ bytesLoaded(ComputeSPMV_ref<float>)
	+ bytesLoaded(ComputeWAXPBY_ref<float, float, double>)
	+ bytesLoaded(ComputeDotProduct_ref<double, double>(x dot x))
	+ bytesLoaded(ComputeDotProduct_ref<double, float>(!x dot x))
	+ bytesLoaded(CopyVector<float>)
	+ (iter-1)
		*(bytesLoaded(ComputeDotProduct_ref<double, float>(!x dot x))
		+ bytesLoaded(ComputeWAXPBY_ref<float, float, float>))
	+ iter
		*((preconditioned
			?bytesLoaded(ComputeMG_ref<double>)
			:bytesLoaded(ComputeWAXPBY_ref<double, double, float>)
		+ bytesLoaded(ComputeWAXPBY_ref<float, float, float>)
		+ bytesLoaded(ComputeWAXPBY_ref<double, float, float>)
		+ bytesLoaded(ComputeSPMV_ref<float>)
		+ bytesLoaded(ComputeDotProduct_ref<float, float>(!x dot x)
		+ bytesLoaded(ComputeDotProduct_ref<double, double>(x dot x))
		
		
	calculated for actual setup (sizeof(void*) -> 8 bytes, sizeof(local_int_t) -> sizeof(int) -> 4 bytes)
		92 + 32*n + 12*nnz
		+ iter
			*(164 + 92*n + 12*nnz
			+ (preconditioned
				?(456
					+ 180*n_0 + 60*nnz_0
					+ 196*n_1 + 60*nnz_1
					+ 196*n_2 + 60*nnz_2
					+ 72*n_3 + 24*nnz_3)
				:0))
				
		#if preconditioned
			92 + 32*n + 12*nnz
			+ iter
				*(620 + 272*n + 72*nnz
				+ 196*n_1 + 60*nnz_1
				+ 196*n_2 + 60*nnz_2
				+ 72*n_3 + 24*nnz_3)
				
			≈92 + 8756/663*nnz
			+ iter
				*(620 + 54536/663*nnz
				+ 35180/521*nnz_1
				+ 34100/503*nnz_2
				+ 1242/47*nnz_3)
				
			≈92 + 8756/663*nnz
			+ iter*(620 + 91.59062*nnz)
			
			≈8756/663*nnz
			+ iter*91.59062*nnz
			
			≈iter*91.59062*nnz
		#else
			92 + 32*n + 12*nnz
			+ iter*(164 + 92*n + 12*nnz)
			
			≈92 + 8756/663*nnz
			+ iter*(164 + 10256/663*nnz)
			
			≈8756/663*nnz + iter*10256/663*nnz

			≈iter*10256/663*nnz
		#endif
			
